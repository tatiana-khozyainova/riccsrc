
CREATE TABLE TBL_GRRSTATE_CHANGE_TYPE (
    GRRSTATE_CHANGE_TYPE_ID  DMN_SMALLINT_KEY /* DMN_SMALLINT_KEY = SMALLINT NOT NULL */,
    VCH_GRRSTATE_NAME        DMN_VARCHAR_150 /* DMN_VARCHAR_150 = VARCHAR(150) DEFAULT '' NOT NULL */,
    VCH_GRRSTATE_SHORT_NAME  DMN_VARCHAR_200 /* DMN_VARCHAR_200 = VARCHAR(200) DEFAULT '' NOT NULL */
);

ALTER TABLE TBL_GRRSTATE_CHANGE_TYPE ADD CONSTRAINT UNQ_GRRSTATE_CHANGE_TYPE_NAME UNIQUE (VCH_GRRSTATE_NAME);
ALTER TABLE TBL_GRRSTATE_CHANGE_TYPE ADD CONSTRAINT UNQ_GRRSTATE_CHANGE_TYPE_SHORT UNIQUE (VCH_GRRSTATE_SHORT_NAME);


ALTER TABLE TBL_GRRSTATE_CHANGE_TYPE ADD CONSTRAINT PK_GRRSTATE_CHANGE_TYPE PRIMARY KEY (GRRSTATE_CHANGE_TYPE_ID);

create generator GNR_GRRSTATE_CHANGE_TYPE;


SET TERM ^ ;

CREATE OR ALTER trigger trg_grrstate_change_type_bi for tbl_grrstate_change_type
active before insert position 0
AS
begin
  new.grrstate_change_type_id = gen_id(gnr_GRRState_Change_Type, 1);
end;

SET TERM ; ^


CREATE GENERATOR GNR_GRRSTATE_CHANGE;


CREATE TABLE TBL_GRRSTATE_CHANGE (
    GRRSTATE_CHANGE_ID       DMN_INTEGER_KEY /* DMN_INTEGER_KEY = INTEGER NOT NULL */,
    VERSION_ID               DMN_SMALLINT_FOREIGN_KEY NOT NULL /* DMN_SMALLINT_FOREIGN_KEY = SMALLINT */,
    GRRSTATE_CHANGE_TYPE_ID  DMN_SMALLINT_FOREIGN_KEY NOT NULL /* DMN_SMALLINT_FOREIGN_KEY = SMALLINT */,
    GRRPARAM_GROUP_ID        DMN_INTEGER_FOREIGN_KEY /* DMN_INTEGER_FOREIGN_KEY = INTEGER */,
    LICENSE_ZONE_ID          DMN_INTEGER_FOREIGN_KEY /* DMN_INTEGER_FOREIGN_KEY = INTEGER */,
    WELL_UIN                 DMN_INTEGER_FOREIGN_KEY /* DMN_INTEGER_FOREIGN_KEY = INTEGER */,
    GRR_DOCUMENT_ID          DMN_INTEGER_FOREIGN_KEY /* DMN_INTEGER_FOREIGN_KEY = INTEGER */
);

ALTER TABLE TBL_GRRSTATE_CHANGE ADD CONSTRAINT PK_GRRSTATE_CHANGE PRIMARY KEY (GRRSTATE_CHANGE_ID);

ALTER TABLE TBL_GRRSTATE_CHANGE ADD CONSTRAINT FK_GRRSTATE_CHANGE_PARAM_GROUP FOREIGN KEY (GRRPARAM_GROUP_ID) REFERENCES TBL_GRRPARAM_GROUP (GRRPARAM_GROUP_ID);
ALTER TABLE TBL_GRRSTATE_CHANGE ADD CONSTRAINT FK_GRRSTATE_CHANGE_TYPE FOREIGN KEY (GRRSTATE_CHANGE_TYPE_ID) REFERENCES TBL_GRRSTATE_CHANGE_TYPE (GRRSTATE_CHANGE_TYPE_ID);
ALTER TABLE TBL_GRRSTATE_CHANGE ADD CONSTRAINT FK_GRRSTATE_CHANGE_VERSION FOREIGN KEY (VERSION_ID) REFERENCES TBL_OBJECT_VERSION (VERSION_ID);
ALTER TABLE TBL_GRRSTATE_CHANGE ADD CONSTRAINT FK_GRRSTATE_LICENSE_ZONE FOREIGN KEY (LICENSE_ZONE_ID, VERSION_ID) REFERENCES TBL_LICENSE_ZONE_DICT (LICENSE_ZONE_ID, VERSION_ID) ON DELETE CASCADE;
ALTER TABLE TBL_GRRSTATE_CHANGE ADD CONSTRAINT FK_GRRSTATE_WELL FOREIGN KEY (WELL_UIN) REFERENCES TBL_WELL (WELL_UIN) ON DELETE CASCADE;
ALTER TABLE TBL_GRRSTATE_CHANGE ADD CONSTRAINT FK_GRRSTATE_DOC FOREIGN KEY (VERSION_ID, GRR_DOCUMENT_ID) REFERENCES TBL_GRRSEISMIC_REPORT (VERSION_ID, GRRSEISMIC_REPORT_ID);

SET TERM ^ ;

CREATE OR ALTER TRIGGER TRG_GRRSTATE_CHANGE_BI FOR TBL_GRRSTATE_CHANGE
ACTIVE BEFORE INSERT POSITION 0
AS
begin
  new.grrstate_change_id = gen_id(gnr_GRRState_Change, 1);
end
^


SET TERM ; ^

insert into tbl_table_data_group (table_id, data_group_id)
values (824, 27);
insert into tbl_table_data_group (table_id, data_group_id)
values (825, 27);
commit;
